#!/bin/bash

# Source the authTest.sh script to reuse authentication functions
source ./tests/authTest.sh

# Function to check partnership status
check_partnership_status() {
  local username=$1
  local token=$2

  echo "User $username checking partnership status..."
  curl -X GET http://localhost:3000/user/partnershipStatus -H "Authorization: Bearer $token"
  echo ""
  echo "------------------------------------------------"
  echo ""
}

# Function to generate a code as a specific user
generate_code_as_user() {
  local username=$1
  local token=$2
  local code_variable_name=$3

  echo "User $username generating a code..."
  local code=$(curl -s -X POST http://localhost:3000/user/generateCode -H "Authorization: Bearer $token" | jq -r '.code')
  echo "Generated code: $code"
  eval "$code_variable_name='$code'"
  echo ""
  echo "------------------------------------------------"
  echo ""
}

# Function to enter code as a specific user
enter_code_as_user() {
  local username=$1
  local token=$2
  local code=$3

  echo "User $username entering a code..."
  curl -X POST http://localhost:3000/user/enterCode -H "Authorization: Bearer $token" -d "{\"code\": \"$code\"}" -H "Content-Type: application/json"
  echo ""
  echo "------------------------------------------------"
  echo ""
}

# Check partnership status for testuser1@example.com before generating code
check_partnership_status "testuser1@example.com" "$TOKEN1"

# Perform actions as testuser1@example.com and capture the generated code
generate_code_as_user "testuser1@example.com" "$TOKEN1" "CODE1"

# Check partnership status for testuser2@example.com before entering the code
check_partnership_status "testuser2@example.com" "$TOKEN2"

# Perform actions as testuser2@example.com and enter the code generated by testuser1@example.com
enter_code_as_user "testuser2@example.com" "$TOKEN2" "$CODE1"

# Check partnership status for testuser1@example.com after entering the code
check_partnership_status "testuser1@example.com" "$TOKEN1"

# Check partnership status for testuser2@example.com after entering the code
check_partnership_status "testuser2@example.com" "$TOKEN2"

# Clean up - delete the test usersy
delete_user "testuser1@example.com"
delete_user "testuser2@example.com"

echo "Test completed."
